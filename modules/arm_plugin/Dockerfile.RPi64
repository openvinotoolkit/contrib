#This Dockerfile is for x86 and should be used for OpenVINO ARM plugin cross-compilation
#https://github.com/openvinotoolkit/openvino_contrib/tree/master/modules/arm_plugin#how-to-build

FROM ubuntu:18.04

ENV DEBIAN_FRONTEND noninteractive
ENV PAKAGE_UPDATES_OF 20210215

#Prerequisite installation
RUN apt-get update && \
    apt-get -y upgrade && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic main restricted > /etc/apt/sources.list && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic universe >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic-updates universe >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic multiverse >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic-updates multiverse >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://security.ubuntu.com/ubuntu/ bionic-security main restricted >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://security.ubuntu.com/ubuntu/ bionic-security universe >> /etc/apt/sources.list && \
    echo deb [arch=amd64] http://security.ubuntu.com/ubuntu/ bionic-security multiverse >> /etc/apt/sources.list && \
    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic main >> /etc/apt/sources.list && \
    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic universe >> /etc/apt/sources.list && \
    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main >> /etc/apt/sources.list && \
    echo deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic-security main >> /etc/apt/sources.list && \
    dpkg --add-architecture arm64 && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        locales \
        apt-transport-https \
        debian-archive-keyring \
        software-properties-common \
        gnupg \
        p7zip-full \
        chrpath \
        wget \
        git \
        git-lfs \
        scons \
        cmake \
        build-essential \
        crossbuild-essential-arm64 \
        python3-dev \
        python3-numpy \
        python3-pip \
        libpython3-dev:arm64 \
        libprotoc-dev \
        protobuf-compiler \
        libusb-1.0-0-dev:arm64 \
        libgtk-3-dev:arm64 \
        libavcodec-dev:arm64 \
        libavformat-dev:arm64 \
        libswscale-dev:arm64 \
    && \
    locale-gen en_US.UTF-8 && \
    pip3 install cython && \
    rm -rf /var/lib/apt/lists/*

#cmake 3.13 or higher is required to build OpenVINO
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        cmake \
    && \
    rm -rf /var/lib/apt/lists/*

RUN git config --global user.name "Your Name" && \
    git config --global user.email "you@example.com"

ENV ARCH_NAME aarch64-linux-gnu
ENV TOOLCHAIN_DEFS arm64.toolchain.cmake
COPY armplg_build.sh /armplg_build.sh

#configure paths
RUN mkdir -p /armcpu_plugin
WORKDIR /armcpu_plugin/

CMD ["sh", "/armplg_build.sh"]
