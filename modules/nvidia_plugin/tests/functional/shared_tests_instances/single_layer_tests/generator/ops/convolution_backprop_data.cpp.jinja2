{%- for op in operators %}
{{op.title_comment}}
INSTANTIATE_TEST_CASE_P(
    {{op.cpp_test_name}},
    {{op.cpp_test_class_name}},
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_kernel}}), // Kernel size
            ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_strides}}), // Strides
            ::testing::Values(std::vector<ptrdiff_t> {{op.cpp_list_pads_begin}}),  // Pad begin
            ::testing::Values(std::vector<ptrdiff_t> {{op.cpp_list_pads_end}}), // Pad end
            ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_dilations}}), // Dilation
            ::testing::Values({{op.cpp_num_output_channels}}), // Num out channels
            ::testing::Values({{op.cpp_auto_pad}})), // Padding type
        ::testing::ValuesIn(std::vector<InferenceEngine::Precision> {{op.cpp_net_precisions}}), // Net precision
        ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
        ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
        ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
        ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
        ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_input_shape}}), // Input shape
{%- if op.has_outputshape_input %}
        ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_output_shape}}), // Output shape
{%- endif %}
        ::testing::Values(ov::test::utils::DEVICE_NVIDIA)), // Device name
    {{op.cpp_test_class_name}}::getTestCaseName);

{% endfor -%}
