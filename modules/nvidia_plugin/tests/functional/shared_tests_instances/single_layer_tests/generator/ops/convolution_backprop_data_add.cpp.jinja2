{%- for op in operators %}
{{op.title_comment}}
INSTANTIATE_TEST_CASE_P(
    {{op.cpp_test_name}},
    {{op.cpp_test_class_name}},
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_kernel}}), // kernel
            ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_strides}}), // strides
            ::testing::Values(std::vector<ptrdiff_t> {{op.cpp_list_pads_begin}}), // pads_begin
            ::testing::Values(std::vector<ptrdiff_t> {{op.cpp_list_pads_end}}), // pads_end
            ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_dilations}}), // dilations
            ::testing::Values({{op.cpp_num_output_channels}}), // Num out channels
            ::testing::Values({{op.cpp_auto_pad}})), // Padding type
        ::testing::ValuesIn(std::vector<InferenceEngine::Precision> {{op.cpp_net_precisions}}), // Net precisions
        ::testing::Values(InferenceEngine::Precision::UNSPECIFIED),
        ::testing::Values(InferenceEngine::Precision::UNSPECIFIED),
        ::testing::Values(InferenceEngine::Layout::ANY),
        ::testing::Values(InferenceEngine::Layout::ANY),
        ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_input_shape}}), // Input shape
        ::testing::Values(InferenceEngine::SizeVector {{op.cpp_list_output_shape}}), // Output spatial shape
        ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
    {{op.cpp_test_class_name}}::getTestCaseName);

{% endfor -%}
