// Copyright (C) 2022-2023 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
//

#include <gtest/gtest-param-test.h>
#include <ie_common.h>

#include <cstddef>
#include <cuda_test_constants.hpp>
#include <ngraph_functions/utils/ngraph_helpers.hpp>
#include <openvino/op/util/attr_types.hpp>
#include <vector>

#include "convolution_biasadd_activation.hpp"

namespace LayerTestsDefinitions {
namespace {

// =============================================================================
// clang-format off
// {AUTOGENERATED_TESTS_BEGIN_TAG}

// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 144, 163, 163), (144, 1, 1, 5, 5), (1, 144, 1, 1)
// Out:    (1, 144, 80, 80)
// Operators: 'efficientdet-d1-tf:opid119' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid119,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({5, 5})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(144), // Num out channels
                ::testing::Values(144), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 144, 163, 163})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 192, 39, 39), (192, 1, 1, 3, 3), (1, 192, 1, 1)
// Out:    (1, 192, 19, 19)
// Operators: 'ssd_mobilenet_v2_coco:opid89' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid89,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(192), // Num out channels
                ::testing::Values(192), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 192, 39, 39})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 240, 81, 81), (240, 1, 1, 3, 3), (1, 240, 1, 1)
// Out:    (1, 240, 40, 40)
// Operators: 'efficientdet-d1-tf:opid185' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid185,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(240), // Num out channels
                ::testing::Values(240), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 240, 81, 81})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 256, 11, 11), (256, 1, 1, 3, 3), (1, 256, 1, 1)
// Out:    (1, 256, 5, 5)
// Operators: 'ssd_mobilenet_v2_coco:opid232' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid232,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(256), // Num out channels
                ::testing::Values(256), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 256, 11, 11})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 64, 3, 3), (64, 1, 1, 3, 3), (1, 64, 1, 1)
// Out:    (1, 64, 1, 1)
// Operators: 'ssd_mobilenet_v2_coco:opid293' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid293,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(64), // Num out channels
                ::testing::Values(64), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 64, 3, 3})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 672, 43, 43), (672, 1, 1, 5, 5), (1, 672, 1, 1)
// Out:    (1, 672, 20, 20)
// Operators: 'efficientdet-d1-tf:opid351' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid351,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({5, 5})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(672), // Num out channels
                ::testing::Values(672), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 672, 43, 43})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 96, 151, 151), (96, 1, 1, 3, 3), (1, 96, 1, 1)
// Out:    (1, 96, 75, 75)
// Operators: 'ssd_mobilenet_v2_coco:opid30' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid30,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(96), // Num out channels
                ::testing::Values(96), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 96, 151, 151})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'explicit', 'dilations': '1,1', 'pads_begin': '0,0', 'pads_end': '0,0', 'strides': '2,2'}
// In:     (1, 96, 321, 321), (96, 1, 1, 3, 3), (1, 96, 1, 1)
// Out:    (1, 96, 160, 160)
// Operators: 'efficientdet-d1-tf:opid55' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid55,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({0, 0})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(96), // Num out channels
                ::testing::Values(96), // Groups
                ::testing::Values(ov::op::PadType::EXPLICIT)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 96, 321, 321})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 1152, 20, 20), (1152, 1, 1, 3, 3), (1, 1152, 1, 1)
// Out:    (1, 1152, 20, 20)
// Operators: 'efficientdet-d1-tf:opid451' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid451,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(1152), // Num out channels
                ::testing::Values(1152), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 1152, 20, 20})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 144, 160, 160), (144, 1, 1, 3, 3), (1, 144, 1, 1)
// Out:    (1, 144, 160, 160)
// Operators: 'efficientdet-d1-tf:opid75' [FP32], 'efficientdet-d1-tf:opid95' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid75,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(144), // Num out channels
                ::testing::Values(144), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 144, 160, 160})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 144, 75, 75), (144, 1, 1, 3, 3), (1, 144, 1, 1)
// Out:    (1, 144, 75, 75)
// Operators: 'ssd_mobilenet_v2_coco:opid41' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid41,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(144), // Num out channels
                ::testing::Values(144), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 144, 75, 75})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 16, 320, 320), (16, 1, 1, 3, 3), (1, 16, 1, 1)
// Out:    (1, 16, 320, 320)
// Operators: 'efficientdet-d1-tf:opid31' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid31,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(16), // Num out channels
                ::testing::Values(16), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 16, 320, 320})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 192, 38, 38), (192, 1, 1, 3, 3), (1, 192, 1, 1)
// Out:    (1, 192, 38, 38)
// Operators: 'ssd_mobilenet_v2_coco:opid63' [FP32], 'ssd_mobilenet_v2_coco:opid74' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid63,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(192), // Num out channels
                ::testing::Values(192), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 192, 38, 38})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 1920, 20, 20), (1920, 1, 1, 3, 3), (1, 1920, 1, 1)
// Out:    (1, 1920, 20, 20)
// Operators: 'efficientdet-d1-tf:opid471' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid471,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(1920), // Num out channels
                ::testing::Values(1920), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 1920, 20, 20})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 32, 150, 150), (32, 1, 1, 3, 3), (1, 32, 1, 1)
// Out:    (1, 32, 150, 150)
// Operators: 'ssd_mobilenet_v2_coco:opid15' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid15,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(32), // Num out channels
                ::testing::Values(32), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 32, 150, 150})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 32, 320, 320), (32, 1, 1, 3, 3), (1, 32, 1, 1)
// Out:    (1, 32, 320, 320)
// Operators: 'efficientdet-d1-tf:opid15' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid15,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(32), // Num out channels
                ::testing::Values(32), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 32, 320, 320})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 384, 19, 19), (384, 1, 1, 3, 3), (1, 384, 1, 1)
// Out:    (1, 384, 19, 19)
// Operators: 'ssd_mobilenet_v2_coco:opid100' [FP32], 'ssd_mobilenet_v2_coco:opid111' [FP32], 'ssd_mobilenet_v2_coco:opid122' [FP32], 'ssd_mobilenet_v2_coco:opid133' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid100,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(384), // Num out channels
                ::testing::Values(384), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 384, 19, 19})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 480, 40, 40), (480, 1, 1, 3, 3), (1, 480, 1, 1)
// Out:    (1, 480, 40, 40)
// Operators: 'efficientdet-d1-tf:opid205' [FP32], 'efficientdet-d1-tf:opid225' [FP32], 'efficientdet-d1-tf:opid245' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid205,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(480), // Num out channels
                ::testing::Values(480), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 480, 40, 40})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 576, 19, 19), (576, 1, 1, 3, 3), (1, 576, 1, 1)
// Out:    (1, 576, 19, 19)
// Operators: 'ssd_mobilenet_v2_coco:opid144' [FP32], 'ssd_mobilenet_v2_coco:opid155' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid144,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(576), // Num out channels
                ::testing::Values(576), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 576, 19, 19})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '1,1'}
// In:     (1, 960, 10, 10), (960, 1, 1, 3, 3), (1, 960, 1, 1)
// Out:    (1, 960, 10, 10)
// Operators: 'ssd_mobilenet_v2_coco:opid184' [FP32], 'ssd_mobilenet_v2_coco:opid195' [FP32], 'ssd_mobilenet_v2_coco:opid206' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid184,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(960), // Num out channels
                ::testing::Values(960), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 960, 10, 10})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '2,2'}
// In:     (1, 128, 3, 3), (128, 1, 1, 3, 3), (1, 128, 1, 1)
// Out:    (1, 128, 2, 2)
// Operators: 'ssd_mobilenet_v2_coco:opid270' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid270,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(128), // Num out channels
                ::testing::Values(128), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 128, 3, 3})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '2,2'}
// In:     (1, 128, 5, 5), (128, 1, 1, 3, 3), (1, 128, 1, 1)
// Out:    (1, 128, 3, 3)
// Operators: 'ssd_mobilenet_v2_coco:opid251' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid251,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(128), // Num out channels
                ::testing::Values(128), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 128, 5, 5})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '2,2'}
// In:     (1, 144, 75, 75), (144, 1, 1, 3, 3), (1, 144, 1, 1)
// Out:    (1, 144, 38, 38)
// Operators: 'ssd_mobilenet_v2_coco:opid52' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid52,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(144), // Num out channels
                ::testing::Values(144), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 144, 75, 75})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '1,1', 'pads_end': '1,1', 'strides': '2,2'}
// In:     (1, 576, 19, 19), (576, 1, 1, 3, 3), (1, 576, 1, 1)
// Out:    (1, 576, 10, 10)
// Operators: 'ssd_mobilenet_v2_coco:opid173' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_ssd_mobilenet_v2_coco_opid173,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({3, 3})), // kernel
                ::testing::Values(std::vector<size_t>({2, 2})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({1, 1})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(576), // Num out channels
                ::testing::Values(576), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 576, 19, 19})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '2,2', 'pads_end': '2,2', 'strides': '1,1'}
// In:     (1, 1152, 20, 20), (1152, 1, 1, 5, 5), (1, 1152, 1, 1)
// Out:    (1, 1152, 20, 20)
// Operators: 'efficientdet-d1-tf:opid371' [FP32], 'efficientdet-d1-tf:opid391' [FP32], 'efficientdet-d1-tf:opid411' [FP32], 'efficientdet-d1-tf:opid431' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid371,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({5, 5})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(1152), // Num out channels
                ::testing::Values(1152), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 1152, 20, 20})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '2,2', 'pads_end': '2,2', 'strides': '1,1'}
// In:     (1, 240, 80, 80), (240, 1, 1, 5, 5), (1, 240, 1, 1)
// Out:    (1, 240, 80, 80)
// Operators: 'efficientdet-d1-tf:opid139' [FP32], 'efficientdet-d1-tf:opid159' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid139,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({5, 5})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(240), // Num out channels
                ::testing::Values(240), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 240, 80, 80})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '2,2', 'pads_end': '2,2', 'strides': '1,1'}
// In:     (1, 480, 40, 40), (480, 1, 1, 5, 5), (1, 480, 1, 1)
// Out:    (1, 480, 40, 40)
// Operators: 'efficientdet-d1-tf:opid265' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid265,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({5, 5})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(480), // Num out channels
                ::testing::Values(480), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 480, 40, 40})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);


// Attrs:  {'auto_pad': 'same_upper', 'dilations': '1,1', 'pads_begin': '2,2', 'pads_end': '2,2', 'strides': '1,1'}
// In:     (1, 672, 40, 40), (672, 1, 1, 5, 5), (1, 672, 1, 1)
// Out:    (1, 672, 40, 40)
// Operators: 'efficientdet-d1-tf:opid285' [FP32], 'efficientdet-d1-tf:opid305' [FP32], 'efficientdet-d1-tf:opid325' [FP32]
INSTANTIATE_TEST_CASE_P(
    autogen_FusedGroupConvolution_efficientdet_d1_tf_opid285,
    GroupConvolutionBiasAddActivationLayerTest,
    ::testing::Combine(
        ::testing::Combine(
            ::testing::Combine(
                ::testing::Values(std::vector<size_t>({5, 5})), // kernel
                ::testing::Values(std::vector<size_t>({1, 1})), // strides
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_begin
                ::testing::Values(std::vector<ptrdiff_t>({2, 2})), // pads_end
                ::testing::Values(std::vector<size_t>({1, 1})), // dilations
                ::testing::Values(672), // Num out channels
                ::testing::Values(672), // Groups
                ::testing::Values(ov::op::PadType::SAME_UPPER)), // Padding type
            ::testing::ValuesIn(std::vector<InferenceEngine::Precision>({InferenceEngine::Precision::FP32, InferenceEngine::Precision::FP16})), // Net precisions
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Input precision
            ::testing::Values(InferenceEngine::Precision::UNSPECIFIED), // Output precision
            ::testing::Values(InferenceEngine::Layout::ANY), // Input layout
            ::testing::Values(InferenceEngine::Layout::ANY), // Output layout
            ::testing::Values(std::vector<size_t>({1, 672, 40, 40})), // Input shape
            ::testing::Values(CommonTestUtils::DEVICE_NVIDIA)),
        ::testing::ValuesIn(std::vector<ngraph::helpers::ActivationTypes>{ngraph::helpers::ActivationTypes::None})),
    GroupConvolutionBiasAddActivationLayerTest::getTestCaseName);

// {AUTOGENERATED_TESTS_END_TAG}
// clang-format on
// =============================================================================

}  // namespace
}  // namespace LayerTestsDefinitions
