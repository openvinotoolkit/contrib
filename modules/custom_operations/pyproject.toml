[project]
name = "openvino-tokenizers"
version = "2023.3.0"
description = "Convert tokenizers into OpenVINO models"
requires-python = ">=3.8"
readme = {file = 'user_ie_extensions/tokenizer/python/README.md', content-type='text/markdown'}

authors = [
    { name = "OpenVINO Developers", email = "openvino@intel.com" },
]

classifiers = [
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]

dependencies = [
    "openvino",
    "numpy"
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest_harvest"
]
transformers = [
    "transformers[sentencepiece]"
]
tiktoken = [
    "tiktoken"
]
all = [
    "openvino_tokenizers[dev,transformers,tiktoken]"
]

[tool.ruff]
ignore = ["C901", "E501", "E741", "W605"]
select = ["C", "E", "F", "I", "W"]
line-length = 119

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"openvino_tokenizers/hf_parser.py" = ["F821"]

[tool.ruff.isort]
lines-after-imports = 2

[tool.scikit-build]
cmake.minimum-version = "3.15"
cmake.build-type = "Release"
cmake.args = ["-DCUSTOM_OPERATIONS=tokenizer", "-DCMAKE_INSTALL_BINDIR=lib"]
cmake.targets = ["user_ov_extensions"]
wheel.packages = ["user_ie_extensions/tokenizer/python/openvino_tokenizers"]
wheel.install-dir = "openvino_tokenizers"
wheel.py-api = "py3"
wheel.license-files = ['../../LICENSE', '../../third-party-programs.txt', '../../SECURITY.md']
sdist.cmake = true
sdist.exclude = ["dist", "tests", "examples", "user_ie_extensions/tokenizer/python/tests"]

[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"