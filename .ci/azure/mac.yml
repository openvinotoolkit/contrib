resources:
  repositories:
  - repository: openvino
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/openvino

  - repository: testdata
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/testdata

jobs:
- job: Mac
  # About 200% of total time (perfomace of Mac hosts is unstable)
  timeoutInMinutes: 180

  pool:
    vmImage: 'macOS-10.15'

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    WORKERS_NUMBER: 3
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    OPENVINO_REPO_DIR: $(REPO_DIR)/../openvino
    MODELS_PATH: $(REPO_DIR)/../testdata
    WORK_DIR: $(Pipeline.Workspace)/_w
    BUILD_DIR: $(WORK_DIR)/build
    BIN_DIR: $(OPENVINO_REPO_DIR)/bin/intel64/$(BUILD_TYPE)

  steps:
  - script: |
      whoami
      uname -a
      which python3
      python3 --version
      which java
      java -version
      gcc --version
      xcrun --sdk macosx --show-sdk-version
      env
      sysctl -a
    displayName: 'System info'

  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      rm -rf $(BUILD_DIR) ; mkdir $(BUILD_DIR)
    displayName: 'Make dir'

  - checkout: self
    clean: true
    lfs: false
    submodules: recursive
    path: openvino_contrib

  - checkout: openvino
    clean: true
    lfs: false
    submodules: recursive
    path: openvino

  - checkout: testdata
    clean: true
    lfs: true
    path: testdata

  - script: |
      brew install cython
      brew install automake
      # Speed up build
      brew install ninja

    workingDirectory: $(WORK_DIR)
    displayName: 'Install dependencies'

  - script: |
      export PATH="/usr/local/opt/cython/bin:$PATH"
      export CC=gcc
      export CXX=g++
      # Disable errors with Ninja
      export CXXFLAGS="-Wno-error=unused-command-line-argument"
      export CFLAGS="-Wno-error=unused-command-line-argument"
      cmake -GNinja -DVERBOSE_BUILD=ON -DNGRAPH_ONNX_IMPORT_ENABLE=OFF -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DIE_EXTRA_MODULES=$(REPO_DIR)/modules $(OPENVINO_REPO_DIR)
    workingDirectory: $(BUILD_DIR)
    displayName: 'CMake'

  - script: ninja
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Mac'

  - script: ls -alR $(OPENVINO_REPO_DIR)/bin/
    displayName: 'List files'

  - script: |
      mkdir native
      cp $(BIN_DIR)/lib/*.dylib native
      cp $(BIN_DIR)/lib/plugins.xml native
      cp $(BIN_DIR)/lib/*.mvcmd native
      cp $(OPENVINO_REPO_DIR)/inference-engine/temp/tbb/lib/lib* native
      cp $(OPENVINO_REPO_DIR)/inference-engine/temp/gna_*/linux/x64/lib* native
      gradle build -Prun_tests -PMODELS_PATH=$(MODELS_PATH) --info
    workingDirectory: $(REPO_DIR)/modules/java_api
    displayName: 'Java tests'
