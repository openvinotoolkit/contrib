trigger:
  branches:
    include:
    - master
    - releases/*
  paths:
    exclude:
    - modules/nvidia_plugin
    - modules/openvino_code

pr:
  branches:
    include:
    - master
    - releases/*
  paths:
    exclude:
    - modules/nvidia_plugin
    - modules/openvino_code

resources:
  repositories:
  - repository: openvino
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/openvino
    ref: releases/2024/1

  - repository: testdata
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/testdata
    ref: releases/2024/1

jobs:
- job: Lin
  # About 150% of total time
  timeoutInMinutes: 60

  pool:
    name: LIN_VMSS_VENV_F16S_U20_WU2

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    OPENVINO_REPO_DIR: $(REPO_DIR)/../openvino
    MODELS_PATH: $(REPO_DIR)/../testdata
    WORK_DIR: $(Pipeline.Workspace)/_w
    BUILD_DIR: $(WORK_DIR)/build
    BUILD_WHEEL_DIR: $(BUILD_DIR)/wheels
    BIN_DIR: $(OPENVINO_REPO_DIR)/bin/intel64/$(BUILD_TYPE)
    INSTALL_DIR: $(WORK_DIR)/install_pkg
    SETUPVARS: $(INSTALL_DIR)/setupvars.sh
    GRADLE_VER: 7.1.1

  steps:
  - script: |
      curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2019-06-01"
      whoami
      uname -a
      echo Python3 info ; which python3 ; python3 --version
      echo Python info ; which python ; python --version
      echo Java info ; which java ; java -version
      echo gcc info ; which gcc ; gcc --version
      echo cmake info ; which cmake ; cmake --version
      lsb_release
      env
      cat /proc/cpuinfo
      cat /proc/meminfo
      cat /etc/fstab
      vmstat -s
      df
      lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
      free -h
    displayName: 'System info'

  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      rm -rf $(BUILD_DIR) ; mkdir $(BUILD_DIR)
    displayName: 'Make dir'

  - checkout: self
    clean: true
    lfs: false
    submodules: recursive
    path: openvino_contrib

  - checkout: openvino
    clean: true
    lfs: false
    submodules: recursive
    path: openvino

  - script: |
      set -e
      sudo -E $(OPENVINO_REPO_DIR)/install_build_dependencies.sh
      # Move jdk into contrib install_build_dependencies.sh
      sudo apt --assume-yes install default-jdk libopencv-dev
      # Install gradle for Java
      sudo apt -y --no-install-recommends install unzip
      wget https://services.gradle.org/distributions/gradle-$(GRADLE_VER)-bin.zip
      unzip gradle-$(GRADLE_VER)-bin.zip
      # For opencv-python: python3-setuptools and pip upgrade
      python3 -m pip install --upgrade pip
      python3 -m pip install -r $(OPENVINO_REPO_DIR)/src/bindings/python/wheel/requirements-dev.txt
      # Speed up build
      wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip
      unzip ninja-linux.zip
      sudo cp -v ninja /usr/local/bin/
    workingDirectory: $(WORK_DIR)
    displayName: 'Install dependencies'

  - checkout: testdata
    clean: true
    lfs: true
    path: testdata

  - task: CMake@1
    inputs:
      cmakeArgs: >
        -GNinja
        -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_BUILD_TYPE=$(BUILD_TYPE)
        -DBUILD_nvidia_plugin=OFF
        -DENABLE_INTEL_GPU=OFF
        -DENABLE_OV_TF_FRONTEND=OFF
        -DENABLE_OV_PADDLE_FRONTEND=OFF
        -DENABLE_OV_TF_LITE_FRONTEND=OFF
        -DENABLE_OV_PYTORCH_FRONTEND=OFF
        -DOPENVINO_EXTRA_MODULES=$(REPO_DIR)/modules
        -DENABLE_PYTHON=ON
        -DENABLE_WHEEL=ON
        $(OPENVINO_REPO_DIR)
      workingDirectory: $(BUILD_DIR)

  - script: ls -alR $(OPENVINO_REPO_DIR)/temp/
    displayName: 'List temp SDKs'

  - script: ninja
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Lin'

  - script: ls -alR $(OPENVINO_REPO_DIR)/bin/
    displayName: 'List bin files'

  - script: cmake -DCMAKE_INSTALL_PREFIX=$(INSTALL_DIR) -P cmake_install.cmake
    workingDirectory: $(BUILD_DIR)
    displayName: 'Install'

  - script: ls -alR $(INSTALL_DIR)
    displayName: 'List install files'

  - script: |
      set -e
      export PATH=$(WORK_DIR)/gradle-$(GRADLE_VER)/bin:${PATH}
      . $(SETUPVARS) gradle clean build --info
      for d in CPU HETERO:CPU; do
        gradle test -Prun_tests -DMODELS_PATH=$(MODELS_PATH) -Ddevice=$d --info;
      done
    workingDirectory: $(REPO_DIR)/modules/java_api
    displayName: 'Java tests'

  - script: |
      set -e
      python3 -m pip install --user virtualenv
      python3 -m virtualenv -p /usr/bin/python3.8 .env3
      source .env3/bin/activate && source $(SETUPVARS)
      python -m pip install --upgrade pip
      python -m pip install -r $(REPO_DIR)/modules/custom_operations/tests/requirements.txt
      python -m pip install $(INSTALL_DIR)/tools/openvino-*.whl
    workingDirectory: $(WORK_DIR)
    displayName: 'Create virtual env'

  - script: |
      set -e
      source $(WORK_DIR)/.env3/bin/activate
      # need to enable sparse_conv tests with new Open3D release
      python -m pytest -k "not sparse_conv" tests/run_tests.py
    env:
      CUSTOM_OP_LIB: $(BIN_DIR)/libuser_ov_extensions.so
    workingDirectory: $(REPO_DIR)/modules/custom_operations
    displayName: 'Custom user operation tests'
