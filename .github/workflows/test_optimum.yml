name: Test Optimum

on: [push, pull_request]

jobs:
  check_code_style:
    name: "Test codestyle"

    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 black

    - name: Check code style
      working-directory: modules/optimum
      run: |
        black --check .
        flake8 .


  test_runtime:
    name: "Test runtime"

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        transformers-version: [
          "transformers[tf-cpu]==2.11.0",
          "transformers[torch,tf-cpu] torch==1.9.1",
        ]
        openvino-version: [
          "openvino-dev~=2021.4.2",
          "--extra-index-url=https://test.pypi.org/simple openvino-dev~=2022.1.0.dev",
        ]
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install package
      working-directory: modules/optimum
      run: |
        python -m pip install --upgrade pip
        python -m pip install .

    - name: Install test dependencies
      run: |
        python -m pip install ${{ matrix.openvino-version }}
        python -m pip install ${{ matrix.transformers-version }} tensorflow-cpu==2.7.0 datasets soundfile
        sudo apt-get install -y libsndfile1

    - name: Test OpenVINO backend
      working-directory: modules/optimum/tests/openvino
      run: |
        python -m unittest -v


  test_nncf:
    name: "Test NNCF"

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        transformers-version: [
          "transformers[torch]==4.9.1",
          "transformers[torch]==4.11.0",
          "transformers[torch]",
        ]
    steps:
    - uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install package
      working-directory: modules/optimum
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[nncf]

    - name: Install test dependencies
      run: |
        python -m pip install ${{ matrix.transformers-version }}
        sudo apt-get install -y libsndfile1

    - name: Prepare examples
      working-directory: modules/optimum/tests/nncf
      run: |
        ver=$(python -c "import transformers; print(transformers.__version__)")
        wget https://raw.githubusercontent.com/huggingface/transformers/v${ver}/examples/pytorch/token-classification/run_ner.py -P examples/pytorch/token-classification
        wget https://raw.githubusercontent.com/huggingface/transformers/v${ver}/examples/pytorch/token-classification/requirements.txt
        patch -p1 < run_ner.patch
        python -m pip install -r requirements.txt && rm requirements.txt

        wget https://raw.githubusercontent.com/huggingface/transformers/v4.15.0/examples/pytorch/audio-classification/run_audio_classification.py -P examples/pytorch/audio-classification
        wget https://raw.githubusercontent.com/huggingface/transformers/v4.15.0/examples/pytorch/audio-classification/requirements.txt
        patch -p1 < run_audio_classification.patch
        python -m pip install -r requirements.txt && rm requirements.txt
        python -m pip install torch==1.9.1

    - name: Test NNCF
      working-directory: modules/optimum/tests/nncf
      run: |
        cp ../../optimum/intel/nncf/configs/* .
        python -m unittest
